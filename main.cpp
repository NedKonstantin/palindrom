// Задание 4 - программа для определения чисел-палиндромов
// и их количества в заданном промежутке натуральных чисел

#include <cstdio>
#include <cstdlib>
#include <iostream>

using namespace std;


int main()
{
    // Метка для продолжения программы в случае некорректного
    // ввода промежутка чисел
    povtor:
    // Объявление переменных N1 и N2 промежутка натуральных чисел
    unsigned int N1, N2;
    cout << "Vvedite pervoe chislo N1: ";
    cin >> N1;
    cout << "Vvedite vtoroe chislo N2: ";
    cin >> N2;
    // Условие проверки корректности ввода начала и конца
    // диапазона натуральных чисел
    if (N2 < N1)
    {
        cout << "N2 dolgno bit bolshe N1 !!!\n"
             << "poprobuite eshce raz!" << endl;
             goto povtor;
    }
    // Объявление и инициализация переменной, указывающей количество
    // чисел в заданном промежутке
    unsigned int S = N2 - N1 + 1;
    // Объявление массива для хранения чисел диапазона
    int natural[S];
    // Объявление и инициализация первого элемента диапазона
    unsigned int element = N1, i = 0;
    // Цикл для записи всех чисел диапазона в созданный массив
    do
    {
        natural[i] = element;
        element++;
        i++;
    }
        while (element <= N2);
    // Вывод на монитор сведений о количестве чисел диапазона
        cout << "V diapazone chisel N1 i N2 nahoditsya "
             << S << " elementov: \n" << endl;
    // Прототип функции для проверки каждого числа диапазона
    void bsrav ( int*, int);
    // Функция для проверки каждого числа диапазона
    bsrav (natural, S);
    // Ожидание, позволяющее пользователю увидеть результат
    // работы программы
    cout << "Press ENTER to continue..." << endl;
    cin.ignore (10, '\n');
    cin.get ();
    return 0;
}
///////////////////////////////////////////////////////////////////////////////
    // Подпрограмма для проверки каждого числа диапазона натуральных чисел
    // и подсчета количества палиндромов с последующим выводом информации на
    // монитор
void bsrav (int natural[], int S)
{
    // Создание указателя на элемент массива, в котором находятся
    // числа заданного диапазона
    int* elnat = natural;
    // Объявление и инициализация счетчика чисел-палиндромов
    int kol = 0;
    // Объявление и инициализация индекса элемента массива, в котором
    // находятся числа заданного диапазона
    int z = 0;
    // Цикл для проверки каждого числа из заданного диапазона
    do
    {
        // Инициализация переменных для подсчета количества
        // цифр в числе из заданного диапазона и разложения этого
        // числа на составляющие его цифры
        int a = *elnat;
        int c = a;
        int b = 0;
        // Цикл для подсчета количества цифр в числе из заданного диапазона
        while (a != 0)
        {
            a = a/10;
            b++;
        }
        // Объявление и инициализация массива для хранения цифр,
        // составляющих число из заданного диапазона
        int chislo[b];
        // Цикл для определения и записи в созданный массив
        // цифр, составляющих число из заданного диапазона
        for (int i = 0; i < b; i++)
        {
            int y = c % 10;
            chislo[i] = y;
            c = c/10;
        }
///////////////////////////////////////////////////////////////////////////////
    // Объявление и инициализация переменной m, являющейся индексом
    // последнего элемента в массиве, в котором хранятся цифры,
    // составляющие число из заданного диапазона
    int m = b - 1;
    // Цикл для проверки числа, является оно палиндромом или нет
    for (int n = 0; n <= b/2; n++)
    {
        // Условие неравенства первого и последнего элементов
        // массива цифр
        if (chislo[n] != chislo[m])
        {
            // Число не является палиндромом
            goto mark;
        }
    --m;
    }
    // Вывод на монитор информации если число является палиндромом
    // и этого числа
    cout << "Chislo palindrom: " << *elnat << endl;
    // Увеличение счетчика чисел-палиндромов
    kol++;
    // Метка, показывающая, где продолжается выполнение программы
    // в случае, если число не является палиндромом
    mark:
    // Переход к следующему числу диапазона
    z++, elnat++;
    }
    // Условие количества циклов
    while (z < S);
    // Вывод на монитор информации о количестве чисел-палиндромов
    // в заданном промежутке натуральных чисел
    cout << "Vsego chisel-palindromov: " << kol << endl;
}
///////////////////////////////////////////////////////////////////////////////










